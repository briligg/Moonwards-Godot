name: "godot-ci export"
on:
  release:
  push:
    tags:
      - v*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  GODOT_VERSION: 3.2.3
  EXPORT_NAME: Moonwards

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Windows Export
        run: |
          mkdir -v -p build/win64
          ls
          cd $GITHUB_WORKSPACE
          godot -v --export "Windows Desktop" /build/win64/${EXPORT_NAME}-Win64.exe
          zip /build/win64/${EXPORT_NAME}-Win64.zip /build/win64/${EXPORT_NAME}-Win64.exe
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: /build/win64/${EXPORT_NAME}-Win64.zip
          asset_name: ${EXPORT_NAME}-Win64.zip
          asset_content_type: application/zip

  export-linux:
    name: Linux Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Linux Export
        run: |
          mkdir -v -p build/linux
          cd $GITHUB_WORKSPACE
          godot -v --export "Linux/X11 Full" /build/linux/$EXPORT_NAME.x86_64
          zip /build/linux/${EXPORT_NAME}-Linux.zip /build/linux/$EXPORT_NAME.x86_64
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: /build/linux/${EXPORT_NAME}-Linux.zip
          asset_name: ${EXPORT_NAME}-Linux.zip
          asset_content_type: application/zip

  export-mac:
    name: Mac Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Mac Export
        run: |
          mkdir -v -p build/mac
          cd $GITHUB_WORKSPACE
          godot -v --export "Mac OSX Full" /build/mac/${EXPORT_NAME}-Mac.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: /build/mac/${EXPORT_NAME}-Mac.zip
          asset_name: ${EXPORT_NAME}-Mac.zip
          asset_content_type: application/zip
