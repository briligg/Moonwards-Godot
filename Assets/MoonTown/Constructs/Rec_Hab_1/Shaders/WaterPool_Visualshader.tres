[gd_resource type="VisualShader" load_steps=122 format=2]

[ext_resource path="res://Assets/SharedAssets/Shaders/UVEditNode.gd" type="Script" id=1]
[ext_resource path="res://Assets/SharedAssets/Shaders/UVPannerNode.gd" type="Script" id=2]
[ext_resource path="res://Assets/SharedAssets/Shaders/NormalWSNode.gd" type="Script" id=3]
[ext_resource path="res://Assets/SharedAssets/Shaders/VertexWSNode.gd" type="Script" id=4]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=2]

[sub_resource type="VisualShaderNodeVectorDecompose" id=3]

[sub_resource type="VisualShaderNodeScalarClamp" id=117]

[sub_resource type="VisualShaderNodeVectorOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=5]
uniform_name = "Albedo_A"

[sub_resource type="VisualShaderNodeTextureUniform" id=6]
uniform_name = "Albedo_Far"

[sub_resource type="VisualShaderNodeColorUniform" id=7]
uniform_name = "Color_A"

[sub_resource type="VisualShaderNodeColorUniform" id=8]
uniform_name = "Color_Far"

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=11]

[sub_resource type="VisualShaderNodeTextureUniform" id=12]
uniform_name = "Rough_AO_A"
texture_type = 1

[sub_resource type="VisualShaderNodeTextureUniform" id=13]
uniform_name = "Rough_AO_Far"
texture_type = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=14]

[sub_resource type="VisualShaderNodeScalarInterp" id=15]

[sub_resource type="VisualShaderNodeScalarInterp" id=16]

[sub_resource type="VisualShaderNodeExpression" id=17]
size = Vector2( 555, 257 )
expression = "//Get distance to camera based on vertex
DistanceFinal = clamp(smoothstep(Distance_min, Distance_max, -Vertex.z), 0.0, 1.0);"

[sub_resource type="VisualShaderNodeTextureUniform" id=18]
uniform_name = "NormalMap_A"
texture_type = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=19]
uniform_name = "NormalMap_Far"
texture_type = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=20]

[sub_resource type="VisualShaderNodeScalarUniform" id=21]
uniform_name = "Normal_Int"

[sub_resource type="VisualShaderNodeScalarUniform" id=22]
uniform_name = "Normal_Far_Int"

[sub_resource type="VisualShaderNodeVectorOp" id=23]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=24]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=25]
uniform_name = "NormalMap_B"
texture_type = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=26]
uniform_name = "DistanceLerp"

[sub_resource type="VisualShaderNodeVectorOp" id=27]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=28]

[sub_resource type="VisualShaderNodeScalarSwitch" id=29]

[sub_resource type="VisualShaderNodeTextureUniform" id=30]
uniform_name = "Rough_AO_B"
texture_type = 1

[sub_resource type="VisualShaderNodeVec3Uniform" id=31]
uniform_name = "Rough_AO_Far_Int"

[sub_resource type="VisualShaderNodeVec3Uniform" id=32]
uniform_name = "Rough_AO_Int"

[sub_resource type="VisualShaderNodeVectorOp" id=33]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=34]
uniform_name = "DistanceSmooth"

[sub_resource type="VisualShaderNodeVectorOp" id=35]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=36]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=37]

[sub_resource type="VisualShaderNodeVectorInterp" id=38]

[sub_resource type="VisualShaderNodeVec3Uniform" id=39]
uniform_name = "Metallic_A_B_Far"

[sub_resource type="VisualShaderNodeVec3Uniform" id=40]
uniform_name = "Specular_A_B_Far"

[sub_resource type="VisualShaderNodeVectorDecompose" id=41]

[sub_resource type="VisualShaderNodeVectorDecompose" id=42]

[sub_resource type="VisualShaderNodeScalarInterp" id=43]

[sub_resource type="VisualShaderNodeScalarInterp" id=44]

[sub_resource type="VisualShaderNodeInput" id=45]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVec3Uniform" id=46]
uniform_name = "UVScale_B"

[sub_resource type="VisualShaderNodeVectorOp" id=47]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=48]
uniform_name = "Albedo_B"

[sub_resource type="VisualShaderNodeColorUniform" id=49]
uniform_name = "Color_B"

[sub_resource type="VisualShaderNodeVectorOp" id=50]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=51]

[sub_resource type="VisualShaderNodeInput" id=52]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec3Uniform" id=53]
uniform_name = "UVScale_Noise"

[sub_resource type="VisualShaderNodeBooleanUniform" id=54]
uniform_name = "NoiseInvert"

[sub_resource type="VisualShaderNodeScalarUniform" id=55]
uniform_name = "NoiseIntensity"

[sub_resource type="VisualShaderNodeInput" id=56]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarClamp" id=57]

[sub_resource type="VisualShaderNodeScalarOp" id=58]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=59]
function = 31

[sub_resource type="VisualShaderNodeScalarSwitch" id=60]

[sub_resource type="VisualShaderNodeScalarSwitch" id=61]

[sub_resource type="VisualShaderNodeScalarSwitch" id=62]

[sub_resource type="VisualShaderNodeBooleanUniform" id=63]
uniform_name = "NoiseAlpha"

[sub_resource type="VisualShaderNodeBooleanUniform" id=64]
uniform_name = "NoiseZ"

[sub_resource type="VisualShaderNodeBooleanUniform" id=65]
uniform_name = "NoiseY"

[sub_resource type="VisualShaderNodeVectorDecompose" id=66]

[sub_resource type="VisualShaderNodeVec3Uniform" id=67]
uniform_name = "UVScale_A"

[sub_resource type="VisualShaderNodeTextureUniform" id=68]
uniform_name = "Noise_RGB"

[sub_resource type="VisualShaderNodeVectorOp" id=69]
operator = 2

[sub_resource type="VisualShaderNodeDotProduct" id=70]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=71]

[sub_resource type="VisualShaderNodeColorConstant" id=72]
constant = Color( 0.00392157, 0.0431373, 0.235294, 0.972549 )

[sub_resource type="VisualShaderNodeColorConstant" id=73]
constant = Color( 0, 0.227451, 1, 0.964706 )

[sub_resource type="VisualShaderNodeInput" id=74]
input_name = "tangent"

[sub_resource type="VisualShaderNodeVec3Uniform" id=75]
uniform_name = "UVScale_Far"

[sub_resource type="VisualShaderNodeScalarInterp" id=76]

[sub_resource type="VisualShaderNodeTextureUniform" id=77]
uniform_name = "Albedo_Far2"

[sub_resource type="VisualShaderNodeTextureUniform" id=78]
uniform_name = "NoiseTe2"

[sub_resource type="VisualShaderNodeCustom" id=79]
default_input_values = [ 1, Vector3( 0.1, 0.75, 0 ), 2, Vector3( 0, 0, 0 ) ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=80]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=81]

[sub_resource type="VisualShaderNodeInput" id=82]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=83]
default_input_values = [ 0, 0.0, 1, 0.01 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=84]

[sub_resource type="VisualShaderNodeVectorCompose" id=85]

[sub_resource type="VisualShaderNodeVectorDecompose" id=86]

[sub_resource type="VisualShaderNodeScalarInterp" id=87]

[sub_resource type="VisualShaderNodeScalarOp" id=88]

[sub_resource type="VisualShaderNodeVectorCompose" id=89]

[sub_resource type="VisualShaderNodeVectorDecompose" id=90]

[sub_resource type="VisualShaderNodeInput" id=91]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=92]
default_input_values = [ 0, 0.0, 1, 0.001 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=93]

[sub_resource type="VisualShaderNodeVectorCompose" id=94]

[sub_resource type="VisualShaderNodeScalarInterp" id=95]

[sub_resource type="VisualShaderNodeCustom" id=96]
default_input_values = [ 1, Vector3( 0, 0, 1 ) ]
script = ExtResource( 2 )

[sub_resource type="VisualShaderNodeScalarConstant" id=97]

[sub_resource type="VisualShaderNodeScalarConstant" id=98]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarOp" id=99]

[sub_resource type="VisualShaderNodeCustom" id=100]
script = ExtResource( 4 )

[sub_resource type="VisualShaderNodeCustom" id=101]
script = ExtResource( 3 )

[sub_resource type="VisualShaderNodeCustom" id=108]
default_input_values = [ 1, Vector3( 0.1, 0.75, 0 ), 2, Vector3( 0, 0, 0 ) ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=109]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=110]

[sub_resource type="VisualShaderNodeInput" id=111]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=112]
default_input_values = [ 0, 0.0, 1, 0.01 ]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=102]
uniform_name = "NoiseTe"

[sub_resource type="VisualShaderNodeScalarOp" id=113]

[sub_resource type="VisualShaderNodeVectorCompose" id=114]

[sub_resource type="VisualShaderNodeScalarOp" id=115]

[sub_resource type="VisualShaderNodeScalarClamp" id=116]

[sub_resource type="VisualShaderNodeCustom" id=103]
default_input_values = [ 1, Vector3( 0.1, 0.75, 0 ), 2, Vector3( 0, 0, 0 ) ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=104]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=105]
input_name = "vertex"

[sub_resource type="VisualShaderNodeCustom" id=106]
script = ExtResource( 3 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=107]

[resource]
code = "shader_type spatial;
uniform sampler2D NoiseTe;
uniform sampler2D NoiseTe2;


// UVEdit

vec3 GetUVEdited( vec3 _UV, vec3 _Scale, vec3 _Offset ) {
	return vec3((_UV.x * _Scale.x)+_Offset.x, (_UV.y * _Scale.y)+_Offset.y, 0.0);
}


void vertex() {
// Input:6
	vec3 n_out6p0 = VERTEX;

// VectorDecompose:10
	float n_out10p0 = n_out6p0.x;
	float n_out10p1 = n_out6p0.y;
	float n_out10p2 = n_out6p0.z;

// Scalar:20
	float n_out20p0 = 0.000000;

// Scalar:21
	float n_out21p0 = 1.000000;

// Input:28
	float n_out28p0 = TIME;

// ScalarOp:29
	float n_in29p1 = 0.01000;
	float n_out29p0 = n_out28p0 * n_in29p1;

// Input:26
	vec3 n_out26p0 = vec3(UV, 0.0);

// UVEdit:25
	vec3 n_in25p1 = vec3(0.10000, 0.75000, 0.00000);
	vec3 n_in25p2 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out25p0;
	{
		n_out25p0 = GetUVEdited(n_out26p0,n_in25p1,n_in25p2);
	}

// VectorDecompose:27
	float n_out27p0 = n_out25p0.x;
	float n_out27p1 = n_out25p0.y;
	float n_out27p2 = n_out25p0.z;

// ScalarOp:30
	float n_out30p0 = n_out29p0 + n_out27p0;

// ScalarOp:32
	float n_out32p0 = n_out29p0 + n_out27p1;

// VectorCompose:31
	vec3 n_out31p0 = vec3(n_out30p0, n_out32p0, n_out27p2);

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(NoiseTe, n_out31p0.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// VectorDecompose:9
	float n_out9p0 = n_out3p0.x;
	float n_out9p1 = n_out3p0.y;
	float n_out9p2 = n_out3p0.z;

// ScalarClamp:33
	float n_in33p1 = 0.00000;
	float n_in33p2 = 1.00000;
	float n_out33p0 = clamp(n_out9p0, n_in33p1, n_in33p2);

// ScalarMix:19
	float n_out19p0 = mix(n_out20p0, n_out21p0, n_out33p0);

// ScalarOp:12
	float n_out12p0 = n_out10p1 + n_out19p0;

// VectorCompose:13
	vec3 n_out13p0 = vec3(n_out10p0, n_out12p0, n_out10p2);

// Output:0
	VERTEX = n_out13p0;

}

void fragment() {
// Color:87
	vec3 n_out87p0 = vec3(0.003922, 0.043137, 0.235294);
	float n_out87p1 = 0.972549;

// Color:88
	vec3 n_out88p0 = vec3(0.000000, 0.227451, 1.000000);
	float n_out88p1 = 0.964706;

// Input:96
	float n_out96p0 = TIME;

// ScalarOp:97
	float n_in97p1 = 0.01000;
	float n_out97p0 = n_out96p0 * n_in97p1;

// Input:94
	vec3 n_out94p0 = vec3(UV, 0.0);

// UVEdit:93
	vec3 n_in93p1 = vec3(0.10000, 0.75000, 0.00000);
	vec3 n_in93p2 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out93p0;
	{
		n_out93p0 = GetUVEdited(n_out94p0,n_in93p1,n_in93p2);
	}

// VectorDecompose:95
	float n_out95p0 = n_out93p0.x;
	float n_out95p1 = n_out93p0.y;
	float n_out95p2 = n_out93p0.z;

// ScalarOp:98
	float n_out98p0 = n_out97p0 + n_out95p0;

// ScalarOp:100
	float n_out100p0 = n_out97p0 + n_out95p1;

// VectorCompose:99
	vec3 n_out99p0 = vec3(n_out98p0, n_out100p0, n_out95p2);

// TextureUniform:92
	vec3 n_out92p0;
	float n_out92p1;
	{
		vec4 n_tex_read = texture(NoiseTe2, n_out99p0.xy);
		n_out92p0 = n_tex_read.rgb;
		n_out92p1 = n_tex_read.a;
	}

// VectorDecompose:101
	float n_out101p0 = n_out92p0.x;
	float n_out101p1 = n_out92p0.y;
	float n_out101p2 = n_out92p0.z;

// ScalarClamp:102
	float n_in102p1 = 0.00000;
	float n_in102p2 = 1.00000;
	float n_out102p0 = clamp(n_out101p0, n_in102p1, n_in102p2);

// VectorScalarMix:86
	vec3 n_out86p0 = mix(n_out87p0, n_out88p0, n_out102p0);

// ScalarMix:90
	float n_out90p0 = mix(n_out87p1, n_out88p1, n_out102p0);

// Output:0
	ALBEDO = n_out86p0;
	ALPHA = n_out90p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1013, -348 )
nodes/vertex/2/node = SubResource( 96 )
nodes/vertex/2/position = Vector2( -1120, 240 )
nodes/vertex/3/node = SubResource( 102 )
nodes/vertex/3/position = Vector2( -420, 20 )
nodes/vertex/4/node = SubResource( 103 )
nodes/vertex/4/position = Vector2( -1540, 100 )
nodes/vertex/5/node = SubResource( 104 )
nodes/vertex/5/position = Vector2( -1680, 100 )
nodes/vertex/6/node = SubResource( 105 )
nodes/vertex/6/position = Vector2( -400, -160 )
nodes/vertex/7/node = SubResource( 106 )
nodes/vertex/7/position = Vector2( -300, 320 )
nodes/vertex/9/node = SubResource( 107 )
nodes/vertex/9/position = Vector2( -200, 100 )
nodes/vertex/10/node = SubResource( 86 )
nodes/vertex/10/position = Vector2( -200, -180 )
nodes/vertex/11/node = SubResource( 87 )
nodes/vertex/11/position = Vector2( 180, -380 )
nodes/vertex/12/node = SubResource( 88 )
nodes/vertex/12/position = Vector2( 240, -100 )
nodes/vertex/13/node = SubResource( 89 )
nodes/vertex/13/position = Vector2( 420, -180 )
nodes/vertex/14/node = SubResource( 90 )
nodes/vertex/14/position = Vector2( -1320, 100 )
nodes/vertex/15/node = SubResource( 91 )
nodes/vertex/15/position = Vector2( -1260, -80 )
nodes/vertex/16/node = SubResource( 92 )
nodes/vertex/16/position = Vector2( -1120, -100 )
nodes/vertex/17/node = SubResource( 93 )
nodes/vertex/17/position = Vector2( -880, -80 )
nodes/vertex/18/node = SubResource( 94 )
nodes/vertex/18/position = Vector2( -620, 100 )
nodes/vertex/19/node = SubResource( 95 )
nodes/vertex/19/position = Vector2( 80, -40 )
nodes/vertex/20/node = SubResource( 97 )
nodes/vertex/20/position = Vector2( -160, -60 )
nodes/vertex/21/node = SubResource( 98 )
nodes/vertex/21/position = Vector2( -160, 20 )
nodes/vertex/22/node = SubResource( 99 )
nodes/vertex/22/position = Vector2( -880, 60 )
nodes/vertex/23/node = SubResource( 100 )
nodes/vertex/23/position = Vector2( -400, -260 )
nodes/vertex/24/node = SubResource( 101 )
nodes/vertex/24/position = Vector2( -320, -360 )
nodes/vertex/25/node = SubResource( 108 )
nodes/vertex/25/position = Vector2( -1380, -280 )
nodes/vertex/26/node = SubResource( 109 )
nodes/vertex/26/position = Vector2( -1520, -280 )
nodes/vertex/27/node = SubResource( 110 )
nodes/vertex/27/position = Vector2( -1160, -280 )
nodes/vertex/28/node = SubResource( 111 )
nodes/vertex/28/position = Vector2( -1440, -460 )
nodes/vertex/29/node = SubResource( 112 )
nodes/vertex/29/position = Vector2( -1220, -480 )
nodes/vertex/30/node = SubResource( 113 )
nodes/vertex/30/position = Vector2( -900, -480 )
nodes/vertex/31/node = SubResource( 114 )
nodes/vertex/31/position = Vector2( -700, -280 )
nodes/vertex/32/node = SubResource( 115 )
nodes/vertex/32/position = Vector2( -900, -280 )
nodes/vertex/33/node = SubResource( 116 )
nodes/vertex/33/position = Vector2( 80, 80 )
nodes/vertex/connections = PoolIntArray( 5, 0, 4, 0, 3, 0, 9, 0, 10, 1, 11, 0, 10, 1, 12, 0, 12, 0, 13, 1, 4, 0, 14, 0, 15, 0, 16, 0, 16, 0, 17, 0, 20, 0, 19, 0, 21, 0, 19, 1, 19, 0, 12, 1, 14, 2, 18, 2, 17, 0, 18, 0, 14, 0, 17, 1, 16, 0, 22, 0, 14, 1, 22, 1, 22, 0, 18, 1, 10, 0, 13, 0, 10, 2, 13, 2, 6, 0, 10, 0, 13, 0, 0, 0, 4, 0, 2, 0, 26, 0, 25, 0, 25, 0, 27, 0, 28, 0, 29, 0, 29, 0, 30, 0, 27, 2, 31, 2, 27, 0, 30, 1, 29, 0, 32, 0, 30, 0, 31, 0, 27, 1, 32, 1, 32, 0, 31, 1, 31, 0, 3, 0, 33, 0, 19, 2, 9, 0, 33, 0 )
nodes/fragment/0/position = Vector2( 100, 200 )
nodes/fragment/3/node = SubResource( 17 )
nodes/fragment/3/position = Vector2( -2160, 1200 )
nodes/fragment/3/size = Vector2( 555, 257 )
nodes/fragment/3/input_ports = "0,1,Vertex;1,0,Distance_max;2,0,Distance_min;"
nodes/fragment/3/output_ports = "0,0,DistanceFinal;"
nodes/fragment/3/expression = "//Get distance to camera based on vertex
DistanceFinal = clamp(smoothstep(Distance_min, Distance_max, -Vertex.z), 0.0, 1.0);"
nodes/fragment/4/node = SubResource( 26 )
nodes/fragment/4/position = Vector2( -2500, 1260 )
nodes/fragment/5/node = SubResource( 34 )
nodes/fragment/5/position = Vector2( -2480, 1340 )
nodes/fragment/6/node = SubResource( 45 )
nodes/fragment/6/position = Vector2( -2440, 1120 )
nodes/fragment/7/node = SubResource( 56 )
nodes/fragment/7/position = Vector2( -2200, 400 )
nodes/fragment/8/node = SubResource( 67 )
nodes/fragment/8/position = Vector2( -2000, 40 )
nodes/fragment/9/node = SubResource( 75 )
nodes/fragment/9/position = Vector2( -2000, 440 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -1800, 0 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( -1800, 400 )
nodes/fragment/12/node = SubResource( 5 )
nodes/fragment/12/position = Vector2( -1200, -800 )
nodes/fragment/13/node = SubResource( 6 )
nodes/fragment/13/position = Vector2( -1200, -200 )
nodes/fragment/14/node = SubResource( 7 )
nodes/fragment/14/position = Vector2( -1200, -920 )
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( -1200, 0 )
nodes/fragment/16/node = SubResource( 9 )
nodes/fragment/16/position = Vector2( -1000, -760 )
nodes/fragment/17/node = SubResource( 10 )
nodes/fragment/17/position = Vector2( -1000, -140 )
nodes/fragment/18/node = SubResource( 11 )
nodes/fragment/18/position = Vector2( -600, -620 )
nodes/fragment/20/node = SubResource( 12 )
nodes/fragment/20/position = Vector2( -1200, 500 )
nodes/fragment/21/node = SubResource( 13 )
nodes/fragment/21/position = Vector2( -1200, 1120 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( -400, 740 )
nodes/fragment/25/node = SubResource( 15 )
nodes/fragment/25/position = Vector2( -400, 240 )
nodes/fragment/26/node = SubResource( 16 )
nodes/fragment/26/position = Vector2( -400, 400 )
nodes/fragment/31/node = SubResource( 18 )
nodes/fragment/31/position = Vector2( -1200, 1400 )
nodes/fragment/32/node = SubResource( 19 )
nodes/fragment/32/position = Vector2( -1200, 1800 )
nodes/fragment/33/node = SubResource( 20 )
nodes/fragment/33/position = Vector2( -400, 1560 )
nodes/fragment/35/node = SubResource( 21 )
nodes/fragment/35/position = Vector2( -1000, 1580 )
nodes/fragment/36/node = SubResource( 22 )
nodes/fragment/36/position = Vector2( -1200, 2000 )
nodes/fragment/37/node = SubResource( 23 )
nodes/fragment/37/position = Vector2( -1000, 1860 )
nodes/fragment/38/node = SubResource( 24 )
nodes/fragment/38/position = Vector2( -800, 1460 )
nodes/fragment/39/node = SubResource( 25 )
nodes/fragment/39/position = Vector2( -1200, 1600 )
nodes/fragment/40/node = SubResource( 27 )
nodes/fragment/40/position = Vector2( -800, 1660 )
nodes/fragment/41/node = SubResource( 28 )
nodes/fragment/41/position = Vector2( -600, 1560 )
nodes/fragment/43/node = SubResource( 29 )
nodes/fragment/43/position = Vector2( -1800, 800 )
nodes/fragment/45/node = SubResource( 30 )
nodes/fragment/45/position = Vector2( -1200, 800 )
nodes/fragment/47/node = SubResource( 31 )
nodes/fragment/47/position = Vector2( -1200, 1320 )
nodes/fragment/48/node = SubResource( 32 )
nodes/fragment/48/position = Vector2( -1200, 720 )
nodes/fragment/49/node = SubResource( 33 )
nodes/fragment/49/position = Vector2( -1000, 1180 )
nodes/fragment/50/node = SubResource( 35 )
nodes/fragment/50/position = Vector2( -1000, 860 )
nodes/fragment/51/node = SubResource( 36 )
nodes/fragment/51/position = Vector2( -1000, 560 )
nodes/fragment/52/node = SubResource( 37 )
nodes/fragment/52/position = Vector2( -793, 744 )
nodes/fragment/53/node = SubResource( 38 )
nodes/fragment/53/position = Vector2( -600, 740 )
nodes/fragment/54/node = SubResource( 39 )
nodes/fragment/54/position = Vector2( -1200, 240 )
nodes/fragment/55/node = SubResource( 40 )
nodes/fragment/55/position = Vector2( -1200, 400 )
nodes/fragment/56/node = SubResource( 41 )
nodes/fragment/56/position = Vector2( -1020, 240 )
nodes/fragment/57/node = SubResource( 42 )
nodes/fragment/57/position = Vector2( -1020, 400 )
nodes/fragment/58/node = SubResource( 43 )
nodes/fragment/58/position = Vector2( -600, 240 )
nodes/fragment/59/node = SubResource( 44 )
nodes/fragment/59/position = Vector2( -600, 400 )
nodes/fragment/60/node = SubResource( 46 )
nodes/fragment/60/position = Vector2( -2000, 240 )
nodes/fragment/61/node = SubResource( 47 )
nodes/fragment/61/position = Vector2( -1800, 200 )
nodes/fragment/62/node = SubResource( 48 )
nodes/fragment/62/position = Vector2( -1200, -600 )
nodes/fragment/63/node = SubResource( 49 )
nodes/fragment/63/position = Vector2( -1200, -400 )
nodes/fragment/64/node = SubResource( 50 )
nodes/fragment/64/position = Vector2( -1000, -540 )
nodes/fragment/65/node = SubResource( 51 )
nodes/fragment/65/position = Vector2( -760, -620 )
nodes/fragment/66/node = SubResource( 52 )
nodes/fragment/66/position = Vector2( -3800, 880 )
nodes/fragment/67/node = SubResource( 53 )
nodes/fragment/67/position = Vector2( -3800, 940 )
nodes/fragment/68/node = SubResource( 54 )
nodes/fragment/68/position = Vector2( -2200, 800 )
nodes/fragment/69/node = SubResource( 55 )
nodes/fragment/69/position = Vector2( -2600, 800 )
nodes/fragment/70/node = SubResource( 57 )
nodes/fragment/70/position = Vector2( -2200, 900 )
nodes/fragment/71/node = SubResource( 58 )
nodes/fragment/71/position = Vector2( -2400, 800 )
nodes/fragment/72/node = SubResource( 59 )
nodes/fragment/72/position = Vector2( -2000, 940 )
nodes/fragment/73/node = SubResource( 60 )
nodes/fragment/73/position = Vector2( -2600, 900 )
nodes/fragment/74/node = SubResource( 61 )
nodes/fragment/74/position = Vector2( -2860, 800 )
nodes/fragment/75/node = SubResource( 62 )
nodes/fragment/75/position = Vector2( -2860, 1000 )
nodes/fragment/76/node = SubResource( 63 )
nodes/fragment/76/position = Vector2( -3200, 1060 )
nodes/fragment/77/node = SubResource( 64 )
nodes/fragment/77/position = Vector2( -3200, 1000 )
nodes/fragment/78/node = SubResource( 65 )
nodes/fragment/78/position = Vector2( -3200, 800 )
nodes/fragment/79/node = SubResource( 66 )
nodes/fragment/79/position = Vector2( -3200, 880 )
nodes/fragment/80/node = SubResource( 68 )
nodes/fragment/80/position = Vector2( -3400, 800 )
nodes/fragment/81/node = SubResource( 69 )
nodes/fragment/81/position = Vector2( -3600, 860 )
nodes/fragment/84/node = SubResource( 70 )
nodes/fragment/84/position = Vector2( -200, 80 )
nodes/fragment/86/node = SubResource( 71 )
nodes/fragment/86/position = Vector2( -40, -80 )
nodes/fragment/87/node = SubResource( 72 )
nodes/fragment/87/position = Vector2( -220, -120 )
nodes/fragment/88/node = SubResource( 73 )
nodes/fragment/88/position = Vector2( -220, -20 )
nodes/fragment/89/node = SubResource( 74 )
nodes/fragment/89/position = Vector2( -460, 80 )
nodes/fragment/90/node = SubResource( 76 )
nodes/fragment/90/position = Vector2( -40, 20 )
nodes/fragment/91/node = SubResource( 77 )
nodes/fragment/91/position = Vector2( -260, 520 )
nodes/fragment/92/node = SubResource( 78 )
nodes/fragment/92/position = Vector2( 860, -480 )
nodes/fragment/93/node = SubResource( 79 )
nodes/fragment/93/position = Vector2( -80, -400 )
nodes/fragment/94/node = SubResource( 80 )
nodes/fragment/94/position = Vector2( -220, -400 )
nodes/fragment/95/node = SubResource( 81 )
nodes/fragment/95/position = Vector2( 140, -400 )
nodes/fragment/96/node = SubResource( 82 )
nodes/fragment/96/position = Vector2( -140, -580 )
nodes/fragment/97/node = SubResource( 83 )
nodes/fragment/97/position = Vector2( 69.5555, -594.556 )
nodes/fragment/98/node = SubResource( 84 )
nodes/fragment/98/position = Vector2( 400, -600 )
nodes/fragment/99/node = SubResource( 85 )
nodes/fragment/99/position = Vector2( 600, -400 )
nodes/fragment/100/node = SubResource( 2 )
nodes/fragment/100/position = Vector2( 400, -400 )
nodes/fragment/101/node = SubResource( 3 )
nodes/fragment/101/position = Vector2( -480, -140 )
nodes/fragment/102/node = SubResource( 117 )
nodes/fragment/102/position = Vector2( -20, -220 )
nodes/fragment/connections = PoolIntArray( 5, 0, 3, 2, 6, 0, 3, 0, 4, 0, 3, 1, 7, 0, 10, 0, 8, 0, 10, 1, 7, 0, 11, 0, 9, 0, 11, 1, 10, 0, 12, 0, 11, 0, 13, 0, 12, 0, 16, 1, 14, 0, 16, 0, 13, 0, 17, 0, 15, 0, 17, 1, 17, 0, 18, 1, 3, 0, 18, 2, 10, 0, 20, 0, 11, 0, 21, 0, 3, 0, 26, 2, 3, 0, 25, 2, 11, 0, 32, 0, 3, 0, 33, 2, 32, 0, 37, 0, 36, 0, 37, 1, 31, 0, 38, 0, 35, 0, 38, 1, 37, 0, 33, 1, 39, 0, 40, 0, 35, 0, 40, 1, 38, 0, 41, 0, 40, 0, 41, 1, 43, 0, 41, 2, 41, 0, 33, 0, 21, 0, 49, 0, 47, 0, 49, 1, 45, 0, 50, 0, 48, 0, 50, 1, 20, 0, 51, 0, 48, 0, 51, 1, 51, 0, 52, 0, 50, 0, 52, 1, 43, 0, 52, 2, 3, 0, 53, 2, 52, 0, 53, 0, 49, 0, 53, 1, 53, 0, 23, 0, 54, 0, 56, 0, 55, 0, 57, 0, 56, 0, 58, 0, 56, 1, 58, 1, 57, 0, 59, 0, 57, 1, 59, 1, 58, 0, 25, 0, 59, 0, 26, 0, 57, 2, 26, 1, 56, 2, 25, 1, 43, 0, 58, 2, 43, 0, 59, 2, 60, 0, 61, 1, 7, 0, 61, 0, 61, 0, 45, 0, 10, 0, 31, 0, 61, 0, 39, 0, 62, 0, 64, 0, 63, 0, 64, 1, 61, 0, 62, 0, 16, 0, 65, 0, 64, 0, 65, 1, 43, 0, 65, 2, 65, 0, 18, 0, 68, 0, 43, 0, 71, 0, 70, 0, 70, 0, 72, 0, 70, 0, 43, 2, 72, 0, 43, 1, 69, 0, 71, 0, 73, 0, 71, 1, 74, 0, 73, 2, 75, 0, 73, 1, 78, 0, 74, 0, 77, 0, 75, 0, 76, 0, 73, 0, 79, 1, 74, 1, 79, 0, 74, 2, 79, 2, 75, 2, 80, 0, 79, 0, 80, 1, 75, 1, 66, 0, 81, 0, 67, 0, 81, 1, 81, 0, 80, 0, 87, 0, 86, 0, 88, 0, 86, 1, 89, 0, 84, 0, 87, 1, 90, 0, 88, 1, 90, 1, 94, 0, 93, 0, 93, 0, 95, 0, 96, 0, 97, 0, 97, 0, 98, 0, 99, 0, 92, 0, 95, 2, 99, 2, 95, 0, 98, 1, 97, 0, 100, 0, 92, 0, 101, 0, 86, 0, 0, 0, 98, 0, 99, 0, 95, 1, 100, 1, 100, 0, 99, 1, 102, 0, 86, 2, 101, 0, 102, 0, 90, 0, 0, 1, 102, 0, 90, 2 )
